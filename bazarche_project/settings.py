"""
Django settings for bazarche_project project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-jnbmyh*#%ux79z!^%n1$dhw^f3^k$-rzt&3=q*w@lq34)q62g+'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
    'soodava.com',
    'www.soodava.com', 
    '144.91.73.42',
    'localhost',
    '127.0.0.1',
    '192.168.1.101'
]

# CSRF settings
CSRF_TRUSTED_ORIGINS = [
    'https://soodava.com',
    'https://www.soodava.com',
    'http://144.91.73.42',
    'http://localhost:8000'
]

# Additional CSRF settings
CSRF_COOKIE_SECURE = False  # False for local testing
CSRF_COOKIE_HTTPONLY = True
CSRF_USE_SESSIONS = False  # Changed to False to avoid session issues
CSRF_COOKIE_SAMESITE = 'Lax'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'bazarche_app.apps.BazarcheAppConfig',  # ← اپلیکیشن بازارچه با signals

    # django-allauth apps
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
    'allauth.socialaccount.providers.apple',
    'django.contrib.humanize',
]

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

LOGIN_URL = '/app/login/'
LOGIN_REDIRECT_URL = '/app/dashboard/'
LOGIN_REDIRECT_URL = '/'
ACCOUNT_LOGOUT_REDIRECT_URL = '/'
# django-allauth settings (updated to remove deprecation warnings)
ACCOUNT_LOGIN_METHODS = {'username', 'email'}
ACCOUNT_SIGNUP_FIELDS = ['email*', 'username*', 'password1*', 'password2*']
ACCOUNT_EMAIL_VERIFICATION = 'optional'
ACCOUNT_LOGOUT_ON_GET = True

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'allauth.account.middleware.AccountMiddleware',  # اضافه شده برای django-allauth
    'bazarche_app.middleware_rate_limit.RateLimitMiddleware',  # محدودیت تعداد درخواست‌ها
    'bazarche_app.middleware_error_report.ErrorReportMiddleware',  # ثبت خطاها
    'bazarche_app.middleware.CustomLocaleMiddleware',  # فعالسازی زبان سفارشی
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'bazarche_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'bazarche_app.context_processors.main_categories',
                'bazarche_app.context_processors.search_query',
                'bazarche_app.context_processors.sidebar_advertisements',
            ],
        },
    },
]

WSGI_APPLICATION = 'bazarche_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

# Database Optimization
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'bazarche_db',
        'USER': 'bazarche_user',
        'PASSWORD': 'Mujtaba$729',
        'HOST': 'localhost',
        'PORT': '5432',
        'OPTIONS': {
            'sslmode': 'prefer',
        },
        'CONN_MAX_AGE': 600,  # نگه داشتن اتصال تا 10 دقیقه
    }
}

# Cache Configuration (Redis)
CACHES = {
    'default': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/1',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
            'CONNECTION_POOL_KWARGS': {
                'max_connections': 50,
                'retry_on_timeout': True,
            },
        },
        'KEY_PREFIX': 'bazarche',
        'TIMEOUT': 300,  # 5 minutes default
    },
    'sessions': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/2',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
        'KEY_PREFIX': 'session',
        'TIMEOUT': 86400,  # 24 hours
    },
    'products': {
        'BACKEND': 'django_redis.cache.RedisCache',
        'LOCATION': 'redis://127.0.0.1:6379/3',
        'OPTIONS': {
            'CLIENT_CLASS': 'django_redis.client.DefaultClient',
        },
        'KEY_PREFIX': 'product',
        'TIMEOUT': 1800,  # 30 minutes
    }
}

# Session Configuration
SESSION_ENGINE = 'django.contrib.sessions.backends.cache'
SESSION_CACHE_ALIAS = 'sessions'
SESSION_COOKIE_AGE = 86400 * 30  # 30 days instead of 24 hours
SESSION_SAVE_EVERY_REQUEST = True  # Changed to True to keep session alive
SESSION_EXPIRE_AT_BROWSER_CLOSE = False  # Keep session even after browser close

# Database Connection Pooling
DATABASE_CONNECTION_POOLING = True
DATABASE_CONNECTION_POOL_SIZE = 20
DATABASE_CONNECTION_POOL_TIMEOUT = 30

# Query Optimization
DB_OPTIMIZATION = {
    'SELECT_FOR_UPDATE_SKIP_LOCKED': True,
    'BULK_CREATE_BATCH_SIZE': 1000,
    'BULK_UPDATE_BATCH_SIZE': 1000,
    'MAX_QUERY_PARAMS': 10000,
}

# Image Processing Optimization
IMAGE_PROCESSING = {
    'MAX_SIZE': (800, 800),  # افزایش کیفیت
    'QUALITY': 75,  # تعادل بین کیفیت و سرعت
    'FORMATS': ['JPEG', 'PNG', 'WEBP'],
    'WEBP_QUALITY': 80,
    'THUMBNAIL_SIZE': (300, 300),
    'PROCESSING_THREADS': 4,  # استفاده از 4 هسته
}

# File Upload Optimization
FILE_UPLOAD_MAX_MEMORY_SIZE = 25 * 1024 * 1024  # 25MB
DATA_UPLOAD_MAX_MEMORY_SIZE = 25 * 1024 * 1024  # 25MB
FILE_UPLOAD_TEMP_DIR = '/tmp/django_uploads'
FILE_UPLOAD_PERMISSIONS = 0o644
FILE_UPLOAD_DIRECTORY_PERMISSIONS = 0o755

# Security & Performance
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
X_FRAME_OPTIONS = 'DENY'
SECURE_REFERRER_POLICY = 'strict-origin-when-cross-origin'

# Additional Security Settings for Production
# SECURE_SSL_REDIRECT = True  # Force HTTPS - COMMENTED OUT FOR LOCAL
# SECURE_HSTS_SECONDS = 31536000  # 1 year - COMMENTED OUT FOR LOCAL
# SECURE_HSTS_INCLUDE_SUBDOMAINS = True - COMMENTED OUT FOR LOCAL
# SECURE_HSTS_PRELOAD = True - COMMENTED OUT FOR LOCAL
# SESSION_COOKIE_SECURE = True  # Only send session cookies over HTTPS - COMMENTED OUT FOR LOCAL
SESSION_COOKIE_HTTPONLY = True  # Prevent XSS attacks
# SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https') - COMMENTED OUT FOR LOCAL

# Compression & Static Files
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.ManifestStaticFilesStorage'
STATICFILES_FINDERS = [
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
]

# Logging Optimization
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'formatters': {
        'verbose': {
            'format': '{levelname} {asctime} {module} {process:d} {thread:d} {message}',
            'style': '{',
        },
        'simple': {
            'format': '{levelname} {message}',
            'style': '{',
        },
    },
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': '/var/www/bazarche_app/logs/bazarche.log',
            'maxBytes': 1024 * 1024 * 10,  # 10MB
            'backupCount': 5,
            'formatter': 'verbose',
        },
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
        'bazarche_app': {
            'handlers': ['file', 'console'],
            'level': 'INFO',
            'propagate': True,
        },
    },
}

# Performance Monitoring
PERFORMANCE_MONITORING = {
    'ENABLE_QUERY_LOGGING': True,
    'SLOW_QUERY_THRESHOLD': 1000,  # 1 second
    'ENABLE_CACHE_STATS': True,
    'ENABLE_MEMORY_MONITORING': True,
}

# Gunicorn Optimization
GUNICORN_CONFIG = {
    'workers': 8,  # 2x CPU cores + 2
    'worker_class': 'sync',
    'worker_connections': 1000,
    'max_requests': 1000,
    'max_requests_jitter': 100,
    'timeout': 30,
    'keepalive': 2,
    'preload_app': True,
}

# Nginx Optimization
NGINX_CONFIG = {
    'worker_processes': 6,  # برابر با CPU cores
    'worker_connections': 1024,
    'keepalive_timeout': 65,
    'client_max_body_size': '25M',
    'gzip': True,
    'gzip_types': 'text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript',
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# ---------- Internationalization (چندزبانه) ----------
LANGUAGES = [
    ('fa', 'دری'),
    ('ps', 'پشتو'),
    ('en', 'English'),
]

LANGUAGE_CODE = 'fa'

TIME_ZONE = 'Asia/Kabul'  # منطقه زمانی افغانستان

USE_I18N = True

USE_TZ = True

LOCALE_PATHS = [
    BASE_DIR / 'locale',
]


# ---------- Static/Media Settings ----------
STATIC_URL = '/static/'
STATICFILES_DIRS = [
    BASE_DIR / 'static',
]
STATIC_ROOT = BASE_DIR / 'staticfiles'

MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
